{"version":3,"sources":["../../src/schema-builder/schema/ForeignKeySchema.ts"],"names":[],"mappings":";;AAEA;;GAEG;AACH;IAgCI,4EAA4E;IAC5E,cAAc;IACd,4EAA4E;IAE5E,0BAAY,IAAY,EACZ,WAAqB,EACrB,qBAA+B,EAC/B,eAAuB,EACvB,QAAiB;QAEzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;QACnD,IAAI,CAAC,mBAAmB,GAAG,eAAe,CAAC;QAC3C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IAED,4EAA4E;IAC5E,iBAAiB;IACjB,4EAA4E;IAE5E;;OAEG;IACH,gCAAK,GAAL;QACI,MAAM,CAAC,IAAI,gBAAgB,CACvB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,qBAAqB,EAC1B,IAAI,CAAC,mBAAmB,CAC3B,CAAC;IACN,CAAC;IAED,4EAA4E;IAC5E,iBAAiB;IACjB,4EAA4E;IAE5E;;OAEG;IACI,uBAAM,GAAb,UAAc,QAA4B;QACtC,MAAM,CAAC,IAAI,gBAAgB,CACvB,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,WAAW,EACpB,QAAQ,CAAC,qBAAqB,EAC9B,QAAQ,CAAC,mBAAmB,EAC5B,QAAQ,CAAC,QAAQ,CACpB,CAAC;IACN,CAAC;IAEL,uBAAC;AAAD,CAlFA,AAkFC,IAAA;AAlFY,4CAAgB","file":"ForeignKeySchema.js","sourcesContent":["import {ForeignKeyMetadata} from \"../../metadata/ForeignKeyMetadata\";\r\n\r\n/**\r\n * Foreign key from the database stored in this class.\r\n */\r\nexport class ForeignKeySchema {\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Public Properties\r\n    // -------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Name of the table which contains this foreign key.\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * Column names which included by this foreign key.\r\n     */\r\n    columnNames: string[];\r\n\r\n    /**\r\n     * Table referenced in the foreign key.\r\n     */\r\n    referencedTableName: string;\r\n\r\n    /**\r\n     * Column names which included by this foreign key.\r\n     */\r\n    referencedColumnNames: string[];\r\n\r\n    /**\r\n     * \"ON DELETE\" of this foreign key, e.g. what action database should perform when\r\n     * referenced stuff is being deleted.\r\n     */\r\n    onDelete?: string;\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Constructor\r\n    // -------------------------------------------------------------------------\r\n\r\n    constructor(name: string,\r\n                columnNames: string[],\r\n                referencedColumnNames: string[],\r\n                referencedTable: string,\r\n                onDelete?: string) {\r\n\r\n        this.name = name;\r\n        this.columnNames = columnNames;\r\n        this.referencedColumnNames = referencedColumnNames;\r\n        this.referencedTableName = referencedTable;\r\n        this.onDelete = onDelete;\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Public Methods\r\n    // -------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Creates a new copy of this foreign key with exactly same properties.\r\n     */\r\n    clone() {\r\n        return new ForeignKeySchema(\r\n            this.name,\r\n            this.columnNames,\r\n            this.referencedColumnNames,\r\n            this.referencedTableName\r\n        );\r\n    }\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Static Methods\r\n    // -------------------------------------------------------------------------\r\n\r\n    /**\r\n     * Creates a new foreign schema from the given foreign key metadata.\r\n     */\r\n    static create(metadata: ForeignKeyMetadata) {\r\n        return new ForeignKeySchema(\r\n            metadata.name,\r\n            metadata.columnNames,\r\n            metadata.referencedColumnNames,\r\n            metadata.referencedTableName,\r\n            metadata.onDelete\r\n        );\r\n    }\r\n\r\n}"],"sourceRoot":"../.."}