{"version":3,"sources":["../../src/metadata-args/MetadataArgsStorage.ts"],"names":[],"mappings":"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","file":"MetadataArgsStorage.js","sourcesContent":["import {RelationMetadataArgs} from \"./RelationMetadataArgs\";\r\nimport {ColumnMetadataArgs} from \"./ColumnMetadataArgs\";\r\nimport {RelationCountMetadataArgs} from \"./RelationCountMetadataArgs\";\r\nimport {IndexMetadataArgs} from \"./IndexMetadataArgs\";\r\nimport {EntityListenerMetadataArgs} from \"./EntityListenerMetadataArgs\";\r\nimport {TableMetadataArgs} from \"./TableMetadataArgs\";\r\nimport {NamingStrategyMetadataArgs} from \"./NamingStrategyMetadataArgs\";\r\nimport {JoinTableMetadataArgs} from \"./JoinTableMetadataArgs\";\r\nimport {JoinColumnMetadataArgs} from \"./JoinColumnMetadataArgs\";\r\nimport {EmbeddedMetadataArgs} from \"./EmbeddedMetadataArgs\";\r\nimport {EntitySubscriberMetadataArgs} from \"./EntitySubscriberMetadataArgs\";\r\nimport {RelationIdMetadataArgs} from \"./RelationIdMetadataArgs\";\r\nimport {InheritanceMetadataArgs} from \"./InheritanceMetadataArgs\";\r\nimport {DiscriminatorValueMetadataArgs} from \"./DiscriminatorValueMetadataArgs\";\r\nimport {EntityRepositoryMetadataArgs} from \"./EntityRepositoryMetadataArgs\";\r\nimport {TransactionEntityMetadataArgs} from \"./TransactionEntityMetadataArgs\";\r\nimport {MetadataUtils} from \"../metadata-builder/MetadataUtils\";\r\n\r\n/**\r\n * Storage all metadatas args of all available types: tables, columns, subscribers, relations, etc.\r\n * Each metadata args represents some specifications of what it represents.\r\n * MetadataArgs used to create a real Metadata objects.\r\n */\r\nexport class MetadataArgsStorage {\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Properties\r\n    // -------------------------------------------------------------------------\r\n\r\n    readonly tables: TableMetadataArgs[] = [];\r\n    readonly entityRepositories: EntityRepositoryMetadataArgs[] = [];\r\n    readonly transactionEntityManagers: TransactionEntityMetadataArgs[] = [];\r\n    readonly namingStrategies: NamingStrategyMetadataArgs[] = [];\r\n    readonly entitySubscribers: EntitySubscriberMetadataArgs[] = [];\r\n    readonly indices: IndexMetadataArgs[] = [];\r\n    readonly columns: ColumnMetadataArgs[] = [];\r\n    readonly relations: RelationMetadataArgs[] = [];\r\n    readonly joinColumns: JoinColumnMetadataArgs[] = [];\r\n    readonly joinTables: JoinTableMetadataArgs[] = [];\r\n    readonly entityListeners: EntityListenerMetadataArgs[] = [];\r\n    readonly relationCounts: RelationCountMetadataArgs[] = [];\r\n    readonly relationIds: RelationIdMetadataArgs[] = [];\r\n    readonly embeddeds: EmbeddedMetadataArgs[] = [];\r\n    readonly inheritances: InheritanceMetadataArgs[] = [];\r\n    readonly discriminatorValues: DiscriminatorValueMetadataArgs[] = [];\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Public Methods\r\n    // -------------------------------------------------------------------------\r\n\r\n    filterTables(target?: Function|string): TableMetadataArgs[];\r\n    filterTables(target?: (Function|string)[]): TableMetadataArgs[];\r\n    filterTables(target?: (Function|string)|(Function|string)[]): TableMetadataArgs[] {\r\n        return this.tables.filter(table => {\r\n            return target instanceof Array ? target.indexOf(table.target) !== -1 : table.target === target;\r\n        });\r\n    }\r\n\r\n    filterColumns(target: Function|string): ColumnMetadataArgs[];\r\n    filterColumns(target: (Function|string)[]): ColumnMetadataArgs[];\r\n    filterColumns(target: (Function|string)|(Function|string)[]): ColumnMetadataArgs[] {\r\n        return this.columns.filter(column => {\r\n            return target instanceof Array ? target.indexOf(column.target) !== -1 : column.target === target;\r\n        });\r\n    }\r\n\r\n    filterRelations(target: Function|string): RelationMetadataArgs[];\r\n    filterRelations(target: (Function|string)[]): RelationMetadataArgs[];\r\n    filterRelations(target: (Function|string)|(Function|string)[]): RelationMetadataArgs[] {\r\n        return this.relations.filter(relation => {\r\n            return target instanceof Array ? target.indexOf(relation.target) !== -1 : relation.target === target;\r\n        });\r\n    }\r\n\r\n    filterRelationIds(target: Function|string): RelationIdMetadataArgs[];\r\n    filterRelationIds(target: (Function|string)[]): RelationIdMetadataArgs[];\r\n    filterRelationIds(target: (Function|string)|(Function|string)[]): RelationIdMetadataArgs[] {\r\n        return this.relationIds.filter(relationId => {\r\n            return target instanceof Array ? target.indexOf(relationId.target) !== -1 : relationId.target === target;\r\n        });\r\n    }\r\n\r\n    filterRelationCounts(target: Function|string): RelationCountMetadataArgs[];\r\n    filterRelationCounts(target: (Function|string)[]): RelationCountMetadataArgs[];\r\n    filterRelationCounts(target: (Function|string)|(Function|string)[]): RelationCountMetadataArgs[] {\r\n        return this.relationCounts.filter(relationCount => {\r\n            return target instanceof Array ? target.indexOf(relationCount.target) !== -1 : relationCount.target === target;\r\n        });\r\n    }\r\n\r\n    filterIndices(target: Function|string): IndexMetadataArgs[];\r\n    filterIndices(target: (Function|string)[]): IndexMetadataArgs[];\r\n    filterIndices(target: (Function|string)|(Function|string)[]): IndexMetadataArgs[] {\r\n        return this.indices.filter(index => {\r\n            return target instanceof Array ? target.indexOf(index.target) !== -1 : index.target === target;\r\n        });\r\n    }\r\n\r\n    filterListeners(target: Function|string): EntityListenerMetadataArgs[];\r\n    filterListeners(target: (Function|string)[]): EntityListenerMetadataArgs[];\r\n    filterListeners(target: (Function|string)|(Function|string)[]): EntityListenerMetadataArgs[] {\r\n        return this.entityListeners.filter(index => {\r\n            return target instanceof Array ? target.indexOf(index.target) !== -1 : index.target === target;\r\n        });\r\n    }\r\n\r\n    filterEmbeddeds(target: Function|string): EmbeddedMetadataArgs[];\r\n    filterEmbeddeds(target: (Function|string)[]): EmbeddedMetadataArgs[];\r\n    filterEmbeddeds(target: (Function|string)|(Function|string)[]): EmbeddedMetadataArgs[] {\r\n        return this.embeddeds.filter(embedded => {\r\n            return target instanceof Array ? target.indexOf(embedded.target) !== -1 : embedded.target === target;\r\n        });\r\n    }\r\n\r\n    findJoinTable(target: Function|string, propertyName: string): JoinTableMetadataArgs|undefined {\r\n        return this.joinTables.find(joinTable => {\r\n            return joinTable.target === target && joinTable.propertyName === propertyName;\r\n        });\r\n    }\r\n\r\n    filterJoinColumns(target: Function|string, propertyName: string): JoinColumnMetadataArgs[] {\r\n        return this.joinColumns.filter(joinColumn => {\r\n            return joinColumn.target === target && joinColumn.propertyName === propertyName;\r\n        });\r\n    }\r\n\r\n    filterSubscribers(target: Function|string): EntitySubscriberMetadataArgs[];\r\n    filterSubscribers(target: (Function|string)[]): EntitySubscriberMetadataArgs[];\r\n    filterSubscribers(target: (Function|string)|(Function|string)[]): EntitySubscriberMetadataArgs[] {\r\n        return this.entitySubscribers.filter(subscriber => {\r\n            return target instanceof Array ? target.indexOf(subscriber.target) !== -1 : subscriber.target === target;\r\n        });\r\n    }\r\n\r\n    filterNamingStrategies(target: Function|string): NamingStrategyMetadataArgs[];\r\n    filterNamingStrategies(target: (Function|string)[]): NamingStrategyMetadataArgs[];\r\n    filterNamingStrategies(target: (Function|string)|(Function|string)[]): NamingStrategyMetadataArgs[] {\r\n        return this.namingStrategies.filter(subscriber => {\r\n            return target instanceof Array ? target.indexOf(subscriber.target) !== -1 : subscriber.target === target;\r\n        });\r\n    }\r\n\r\n    filterTransactionEntityManagers(target: Function|string): TransactionEntityMetadataArgs[];\r\n    filterTransactionEntityManagers(target: (Function|string)[]): TransactionEntityMetadataArgs[];\r\n    filterTransactionEntityManagers(target: (Function|string)|(Function|string)[]): TransactionEntityMetadataArgs[] {\r\n        return this.transactionEntityManagers.filter(subscriber => {\r\n            return target instanceof Array ? target.indexOf(subscriber.target) !== -1 : subscriber.target === target;\r\n        });\r\n    }\r\n\r\n    filterSingleTableChildren(target: Function|string): TableMetadataArgs[] {\r\n        return this.tables.filter(table => {\r\n            return table.target instanceof Function\r\n                && target instanceof Function\r\n                && MetadataUtils.isInherited(table.target, target)\r\n                && table.type === \"single-table-child\";\r\n        });\r\n    }\r\n\r\n    findInheritanceType(target: Function|string): InheritanceMetadataArgs|undefined {\r\n        return this.inheritances.find(inheritance => inheritance.target === target);\r\n    }\r\n\r\n    findDiscriminatorValue(target: Function|string): DiscriminatorValueMetadataArgs|undefined {\r\n        return this.discriminatorValues.find(discriminatorValue => discriminatorValue.target === target);\r\n    }\r\n\r\n}"],"sourceRoot":".."}