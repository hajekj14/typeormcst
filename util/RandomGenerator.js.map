{"version":3,"sources":["../../src/util/RandomGenerator.ts"],"names":[],"mappings":"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","file":"RandomGenerator.js","sourcesContent":["export class RandomGenerator {\r\n\r\n    /**\r\n     *  discuss at: http://locutus.io/php/sha1/\r\n     * original by: Webtoolkit.info (http://www.webtoolkit.info/)\r\n     * improved by: Michael White (http://getsprink.com)\r\n     * improved by: Kevin van Zonneveld (http://kvz.io)\r\n     *    input by: Brett Zamir (http://brett-zamir.me)\r\n     *      note 1: Keep in mind that in accordance with PHP, the whole string is buffered and then\r\n     *      note 1: hashed. If available, we'd recommend using Node's native crypto modules directly\r\n     *      note 1: in a steaming fashion for faster and more efficient hashing\r\n     *   example 1: sha1('Kevin van Zonneveld')\r\n     *   returns 1: '54916d2e62f65b3afa6e192e6a601cdbe5cb5897'\r\n     */\r\n    static sha1(str: string) {\r\n\r\n        let _rotLeft = function(n: any, s: any) {\r\n            let t4 = (n << s) | (n >>> (32 - s));\r\n            return t4;\r\n        };\r\n\r\n        let _cvtHex = function(val: any) {\r\n            let str = \"\";\r\n            let i;\r\n            let v;\r\n\r\n            for (i = 7; i >= 0; i--) {\r\n                v = (val >>> (i * 4)) & 0x0f;\r\n                str += v.toString(16);\r\n            }\r\n            return str;\r\n        };\r\n\r\n        let blockstart;\r\n        let i, j;\r\n        let W = new Array(80);\r\n        let H0 = 0x67452301;\r\n        let H1 = 0xEFCDAB89;\r\n        let H2 = 0x98BADCFE;\r\n        let H3 = 0x10325476;\r\n        let H4 = 0xC3D2E1F0;\r\n        let A, B, C, D, E;\r\n        let temp;\r\n\r\n        // utf8_encode\r\n        str = /*unescape*/(encodeURIComponent(str));\r\n        let strLen = str.length;\r\n\r\n        let wordArray = [];\r\n        for (i = 0; i < strLen - 3; i += 4) {\r\n            j = str.charCodeAt(i) << 24 |\r\n                str.charCodeAt(i + 1) << 16 |\r\n                str.charCodeAt(i + 2) << 8 |\r\n                str.charCodeAt(i + 3);\r\n            wordArray.push(j);\r\n        }\r\n\r\n        switch (strLen % 4) {\r\n            case 0:\r\n                i = 0x080000000;\r\n                break;\r\n            case 1:\r\n                i = str.charCodeAt(strLen - 1) << 24 | 0x0800000;\r\n                break;\r\n            case 2:\r\n                i = str.charCodeAt(strLen - 2) << 24 | str.charCodeAt(strLen - 1) << 16 | 0x08000;\r\n                break;\r\n            case 3:\r\n                i = str.charCodeAt(strLen - 3) << 24 |\r\n                    str.charCodeAt(strLen - 2) << 16 |\r\n                    str.charCodeAt(strLen - 1) <<\r\n                    8 | 0x80;\r\n                break;\r\n        }\r\n\r\n        wordArray.push(i);\r\n\r\n        while ((wordArray.length % 16) !== 14) {\r\n            wordArray.push(0);\r\n        }\r\n\r\n        wordArray.push(strLen >>> 29);\r\n        wordArray.push((strLen << 3) & 0x0ffffffff);\r\n\r\n        for (blockstart = 0; blockstart < wordArray.length; blockstart += 16) {\r\n            for (i = 0; i < 16; i++) {\r\n                W[i] = wordArray[blockstart + i];\r\n            }\r\n            for (i = 16; i <= 79; i++) {\r\n                W[i] = _rotLeft(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\r\n            }\r\n\r\n            A = H0;\r\n            B = H1;\r\n            C = H2;\r\n            D = H3;\r\n            E = H4;\r\n\r\n            for (i = 0; i <= 19; i++) {\r\n                temp = (_rotLeft(A, 5) + ((B & C) | (~B & D)) + E + W[i] + 0x5A827999) & 0x0ffffffff;\r\n                E = D;\r\n                D = C;\r\n                C = _rotLeft(B, 30);\r\n                B = A;\r\n                A = temp;\r\n            }\r\n\r\n            for (i = 20; i <= 39; i++) {\r\n                temp = (_rotLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0x6ED9EBA1) & 0x0ffffffff;\r\n                E = D;\r\n                D = C;\r\n                C = _rotLeft(B, 30);\r\n                B = A;\r\n                A = temp;\r\n            }\r\n\r\n            for (i = 40; i <= 59; i++) {\r\n                temp = (_rotLeft(A, 5) + ((B & C) | (B & D) | (C & D)) + E + W[i] + 0x8F1BBCDC) & 0x0ffffffff;\r\n                E = D;\r\n                D = C;\r\n                C = _rotLeft(B, 30);\r\n                B = A;\r\n                A = temp;\r\n            }\r\n\r\n            for (i = 60; i <= 79; i++) {\r\n                temp = (_rotLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0xCA62C1D6) & 0x0ffffffff;\r\n                E = D;\r\n                D = C;\r\n                C = _rotLeft(B, 30);\r\n                B = A;\r\n                A = temp;\r\n            }\r\n\r\n            H0 = (H0 + A) & 0x0ffffffff;\r\n            H1 = (H1 + B) & 0x0ffffffff;\r\n            H2 = (H2 + C) & 0x0ffffffff;\r\n            H3 = (H3 + D) & 0x0ffffffff;\r\n            H4 = (H4 + E) & 0x0ffffffff;\r\n        }\r\n\r\n        temp = _cvtHex(H0) + _cvtHex(H1) + _cvtHex(H2) + _cvtHex(H3) + _cvtHex(H4);\r\n        return temp.toLowerCase();\r\n    }\r\n\r\n}"],"sourceRoot":".."}