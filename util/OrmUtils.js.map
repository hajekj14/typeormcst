{"version":3,"sources":["../../src/util/OrmUtils.ts"],"names":[],"mappings":"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","file":"OrmUtils.js","sourcesContent":["import {ObjectLiteral} from \"../common/ObjectLiteral\";\r\n\r\nexport class OrmUtils {\r\n\r\n    static groupBy<T, R>(array: T[], propertyCallback: (item: T) => R): { id: R, items: T[] }[] {\r\n        return array.reduce((groupedArray, value) => {\r\n            const key = propertyCallback(value);\r\n            let grouped = groupedArray.find(i => i.id === key);\r\n            if (!grouped) {\r\n                grouped = { id: key, items: [] };\r\n                groupedArray.push(grouped);\r\n            }\r\n            grouped.items.push(value);\r\n            return groupedArray;\r\n        }, [] as Array<{ id: R, items: T[] }>);\r\n    }\r\n\r\n    static isObject(item: any) {\r\n        return (item && typeof item === \"object\" && !Array.isArray(item));\r\n    }\r\n\r\n    /**\r\n     * Deep Object.assign.\r\n     *\r\n     * @see http://stackoverflow.com/a/34749873\r\n     */\r\n    static mergeDeep(target: any, ...sources: any[]): any {\r\n        if (!sources.length) return target;\r\n        const source = sources.shift();\r\n\r\n        if (this.isObject(target) && this.isObject(source)) {\r\n            for (const key in source) {\r\n                if (this.isObject(source[key])) {\r\n                    if (!target[key]) Object.assign(target, { [key]: {} });\r\n                    this.mergeDeep(target[key], source[key]);\r\n                } else {\r\n                    Object.assign(target, { [key]: source[key] });\r\n                }\r\n            }\r\n        }\r\n\r\n        return this.mergeDeep(target, ...sources);\r\n    }\r\n\r\n    /**\r\n     * Deep compare objects.\r\n     *\r\n     * @see http://stackoverflow.com/a/1144249\r\n     */\r\n    static deepCompare(...args: any[]) {\r\n        let i: any, l: any, leftChain: any, rightChain: any;\r\n\r\n        function compare2Objects(x: any, y: any) {\r\n            let p;\r\n\r\n            // remember that NaN === NaN returns false\r\n            // and isNaN(undefined) returns true\r\n            if (isNaN(x) && isNaN(y) && typeof x === \"number\" && typeof y === \"number\")\r\n                return true;\r\n\r\n            // Compare primitives and functions.\r\n            // Check if both arguments link to the same object.\r\n            // Especially useful on the step where we compare prototypes\r\n            if (x === y)\r\n                return true;\r\n\r\n            if (x.equals instanceof Function && x.equals(y))\r\n                return true;\r\n\r\n            // Works in case when functions are created in constructor.\r\n            // Comparing dates is a common scenario. Another built-ins?\r\n            // We can even handle functions passed across iframes\r\n            if ((typeof x === \"function\" && typeof y === \"function\") ||\r\n                (x instanceof Date && y instanceof Date) ||\r\n                (x instanceof RegExp && y instanceof RegExp) ||\r\n                (x instanceof String && y instanceof String) ||\r\n                (x instanceof Number && y instanceof Number))\r\n                return x.toString() === y.toString();\r\n\r\n            // At last checking prototypes as good as we can\r\n            if (!(x instanceof Object && y instanceof Object))\r\n                return false;\r\n\r\n            if (x.isPrototypeOf(y) || y.isPrototypeOf(x))\r\n                return false;\r\n\r\n            if (x.constructor !== y.constructor)\r\n                return false;\r\n\r\n            if (x.prototype !== y.prototype)\r\n                return false;\r\n\r\n            // Check for infinitive linking loops\r\n            if (leftChain.indexOf(x) > -1 || rightChain.indexOf(y) > -1)\r\n                return false;\r\n\r\n            // Quick checking of one object being a subset of another.\r\n            // todo: cache the structure of arguments[0] for performance\r\n            for (p in y) {\r\n                if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\r\n                    return false;\r\n                }\r\n                else if (typeof y[p] !== typeof x[p]) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            for (p in x) {\r\n                if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\r\n                    return false;\r\n                }\r\n                else if (typeof y[p] !== typeof x[p]) {\r\n                    return false;\r\n                }\r\n\r\n                switch (typeof (x[p])) {\r\n                    case \"object\":\r\n                    case \"function\":\r\n\r\n                        leftChain.push(x);\r\n                        rightChain.push(y);\r\n\r\n                        if (!compare2Objects (x[p], y[p])) {\r\n                            return false;\r\n                        }\r\n\r\n                        leftChain.pop();\r\n                        rightChain.pop();\r\n                        break;\r\n\r\n                    default:\r\n                        if (x[p] !== y[p]) {\r\n                            return false;\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        if (arguments.length < 1) {\r\n            return true; // Die silently? Don't know how to handle such case, please help...\r\n            // throw \"Need two or more arguments to compare\";\r\n        }\r\n\r\n        for (i = 1, l = arguments.length; i < l; i++) {\r\n\r\n            leftChain = []; // Todo: this can be cached\r\n            rightChain = [];\r\n\r\n            if (!compare2Objects(arguments[0], arguments[i])) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Transforms given value into boolean value.\r\n     */\r\n    static toBoolean(value: any): boolean {\r\n        if (typeof value === \"boolean\")\r\n            return value;\r\n\r\n        if (typeof value === \"string\")\r\n            return value === \"true\" || value === \"1\";\r\n\r\n        if (typeof value === \"number\")\r\n            return value > 0;\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Composes an object from the given array of keys and values.\r\n     */\r\n    static zipObject(keys: any[], values: any[]): ObjectLiteral {\r\n        return keys.reduce((object, column, index) => {\r\n            object[column] = values[index];\r\n            return object;\r\n        }, {} as ObjectLiteral);\r\n    }\r\n\r\n}"],"sourceRoot":".."}