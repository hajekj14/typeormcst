{"version":3,"sources":["../../src/metadata-builder/error/UsingJoinTableOnlyOnOneSideAllowedError.ts"],"names":[],"mappings":";;;;;;;;;;;;AAGA;GACG;AACH;IAA6D,2DAAK;IAG9D,iDAAY,cAA8B,EAAE,QAA0B;QAAtE,YACI,iBAAO,SAIV;QAPD,UAAI,GAAG,yCAAyC,CAAC;QAI7C,KAAI,CAAC,OAAO,GAAG,gFAAgF;aAC3F,UAAQ,cAAc,CAAC,IAAI,SAAI,QAAQ,CAAC,YAAY,aAAQ,QAAQ,CAAC,qBAAqB,CAAC,IAAI,SAAI,QAAQ,CAAC,eAAe,CAAC,YAAY,MAAG,CAAA;YAC3I,wFAAwF,CAAC;;IACjG,CAAC;IAEL,8CAAC;AAAD,CAVA,AAUC,CAV4D,KAAK,GAUjE;AAVY,0FAAuC","file":"UsingJoinTableOnlyOnOneSideAllowedError.js","sourcesContent":["import {EntityMetadata} from \"../../metadata/EntityMetadata\";\r\nimport {RelationMetadata} from \"../../metadata/RelationMetadata\";\r\n\r\n/**\r\n */\r\nexport class UsingJoinTableOnlyOnOneSideAllowedError extends Error {\r\n    name = \"UsingJoinTableOnlyOnOneSideAllowedError\";\r\n\r\n    constructor(entityMetadata: EntityMetadata, relation: RelationMetadata) {\r\n        super();\r\n        this.message = `Using JoinTable is allowed only on one side of the many-to-many relationship. ` +\r\n            `Both ${entityMetadata.name}#${relation.propertyName} and ${relation.inverseEntityMetadata.name}#${relation.inverseRelation.propertyName} ` +\r\n            `has JoinTable decorators. Choose one of them and left JoinColumn decorator only on it.`;\r\n    }\r\n\r\n}"],"sourceRoot":"../.."}