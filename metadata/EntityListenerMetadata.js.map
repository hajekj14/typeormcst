{"version":3,"sources":["../../src/metadata/EntityListenerMetadata.ts"],"names":[],"mappings":";;AAIA;;GAEG;AACH;IAqBI,wEAAwE;IACxE,cAAc;IACd,wEAAwE;IAExE,gCAAY,IAAgC;QACxC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IAC1B,CAAC;IAED,wEAAwE;IACxE,iBAAiB;IACjB,wEAAwE;IAExE;;OAEG;IACH,0CAAS,GAAT,UAAU,MAAqB;QAC3B,MAAM,CAAC,IAAI,CAAC,MAAM,KAAK,MAAM,CAAC,WAAW;YACrC,CAAC,IAAI,CAAC,MAAM,YAAY,QAAQ,IAAI,MAAM,CAAC,WAAW,CAAC,SAAS,YAAY,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,yDAAyD;IAC3J,CAAC;IAEL,6BAAC;AAAD,CA3CA,AA2CC,IAAA;AA3CY,wDAAsB","file":"EntityListenerMetadata.js","sourcesContent":["import {EventListenerType} from \"./types/EventListenerTypes\";\r\nimport {EntityListenerMetadataArgs} from \"../metadata-args/EntityListenerMetadataArgs\";\r\nimport {ObjectLiteral} from \"../common/ObjectLiteral\";\r\n\r\n/**\r\n * This metadata contains all information about entity's listeners.\r\n */\r\nexport class EntityListenerMetadata {\r\n\r\n    // ---------------------------------------------------------------------\r\n    // Properties\r\n    // ---------------------------------------------------------------------\r\n\r\n    /**\r\n     * Target class to which metadata is applied.\r\n     */\r\n    target: Function|string;\r\n\r\n    /**\r\n     * Target's property name to which this metadata is applied.\r\n     */\r\n    propertyName: string;\r\n\r\n    /**\r\n     * The type of the listener.\r\n     */\r\n    type: EventListenerType;\r\n\r\n    // ---------------------------------------------------------------------\r\n    // Constructor\r\n    // ---------------------------------------------------------------------\r\n\r\n    constructor(args: EntityListenerMetadataArgs) {\r\n        this.target = args.target;\r\n        this.propertyName = args.propertyName;\r\n        this.type = args.type;\r\n    }\r\n\r\n    // ---------------------------------------------------------------------\r\n    // Public Methods\r\n    // ---------------------------------------------------------------------\r\n\r\n    /**\r\n     * Checks if entity listener is allowed to be executed on the given entity.\r\n     */\r\n    isAllowed(entity: ObjectLiteral) { // todo: create in entity metadata method like isInherited?\r\n        return this.target === entity.constructor || // todo: .constructor won't work for entity schemas\r\n            (this.target instanceof Function && entity.constructor.prototype instanceof this.target); // todo: also need to implement entity schema inheritance\r\n    }\r\n\r\n}"],"sourceRoot":".."}