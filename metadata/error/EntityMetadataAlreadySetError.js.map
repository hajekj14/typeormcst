{"version":3,"sources":["../../src/metadata/error/EntityMetadataAlreadySetError.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;GAEG;AACH;IAAmD,iDAAK;IAGpD,uCAAY,IAAc,EAAE,MAAiC,EAAE,SAA2B;QAA1F,YACI,iBAAO,SAIV;QAPD,UAAI,GAAG,+BAA+B,CAAC;QAInC,IAAM,aAAa,GAAG,MAAM,GAAG,WAAS,MAAM,YAAY,QAAQ,GAAI,MAAM,CAAC,WAAmB,CAAC,IAAI,GAAG,MAAM,CAAG,GAAG,EAAE,CAAC;QACvH,IAAM,gBAAgB,GAAG,SAAS,GAAG,WAAU,SAAS,gBAAc,GAAG,EAAE,CAAC;QAC5E,KAAI,CAAC,OAAO,GAAG,iBAAiB,GAAG,aAAa,GAAG,gBAAgB,GAAG,gCAAgC,GAAI,IAAI,CAAC,WAAmB,CAAC,IAAI,CAAC;;IAC5I,CAAC;IAEL,oCAAC;AAAD,CAVA,AAUC,CAVkD,KAAK,GAUvD;AAVY,sEAA6B","file":"EntityMetadataAlreadySetError.js","sourcesContent":["/**\r\n * Thrown when user tries to execute operation that requires connection to be established.\r\n */\r\nexport class EntityMetadataAlreadySetError extends Error {\r\n    name = \"EntityMetadataAlreadySetError\";\r\n\r\n    constructor(type: Function, target: Function|string|undefined, tableName: string|undefined) {\r\n        super();\r\n        const targetMessage = target ? ` for ${ target instanceof Function ? (target.constructor as any).name : target }` : \"\";\r\n        const tableNameMessage = tableName ? ` with ${ tableName } table name` : \"\";\r\n        this.message = \"Entity metadata\" + targetMessage + tableNameMessage + \" has been already set to this \" + (type.constructor as any).name;\r\n    }\r\n\r\n}"],"sourceRoot":"../.."}