{"version":3,"sources":["../../src/decorator/Embedded.ts"],"names":[],"mappings":";;AACA,kCAAgD;AAGhD;;;;;;GAMG;AACH,kBAA4B,YAA2C,EAAE,OAAsD;IAC3H,MAAM,CAAC,UAAU,MAAc,EAAE,YAAoB;QAEjD,IAAM,mBAAmB,GAAG,OAAO,IAAK,OAAe,CAAC,WAAW,GAAI,OAAe,CAAC,WAAW,CAAC,aAAa,EAAE,MAAM,EAAE,YAAY,CAAC,GAAG,SAAS,CAAC;QACpJ,IAAM,OAAO,GAAG,mBAAmB,KAAK,KAAK,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,KAAK,KAAK,IAAI,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;QAEpG,IAAM,IAAI,GAAyB;YAC/B,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,YAAY,EAAE,YAAY;YAC1B,OAAO,EAAE,OAAO;YAChB,MAAM,EAAE,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS,GAAG,OAAO,CAAC,MAAM,GAAG,SAAS;YAC5E,IAAI,EAAE,YAAY;SACrB,CAAC;QACF,8BAAsB,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClD,CAAC,CAAC;AACN,CAAC;AAfD,4BAeC","file":"Embedded.js","sourcesContent":["import {ObjectType} from \"../common/ObjectType\";\r\nimport {getMetadataArgsStorage} from \"../index\";\r\nimport {EmbeddedMetadataArgs} from \"../metadata-args/EmbeddedMetadataArgs\";\r\n\r\n/**\r\n * Property in entity can be marked as Embedded, and on persist all columns from the embedded are mapped to the\r\n * single table of the entity where Embedded is used. And on hydration all columns which supposed to be in the\r\n * embedded will be mapped to it from the single table.\r\n *\r\n * Array option works only in monogodb.\r\n */\r\nexport function Embedded<T>(typeFunction: (type?: any) => ObjectType<T>, options?: { prefix?: string|boolean, array?: boolean }) {\r\n    return function (object: Object, propertyName: string) {\r\n\r\n        const reflectMetadataType = Reflect && (Reflect as any).getMetadata ? (Reflect as any).getMetadata(\"design:type\", object, propertyName) : undefined;\r\n        const isArray = reflectMetadataType === Array || (options && options.array === true) ? true : false;\r\n\r\n        const args: EmbeddedMetadataArgs = {\r\n            target: object.constructor,\r\n            propertyName: propertyName,\r\n            isArray: isArray,\r\n            prefix: options && options.prefix !== undefined ? options.prefix : undefined,\r\n            type: typeFunction\r\n        };\r\n        getMetadataArgsStorage().embeddeds.push(args);\r\n    };\r\n}"],"sourceRoot":".."}