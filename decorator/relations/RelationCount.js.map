{"version":3,"sources":["../../src/decorator/relations/RelationCount.ts"],"names":[],"mappings":";;AAAA,qCAAmD;AAInD;;GAEG;AACH,uBAAiC,QAAqC,EAAE,KAAc,EAAE,mBAAkE;IACtJ,MAAM,CAAC,UAAU,MAAc,EAAE,YAAoB;QACjD,IAAM,IAAI,GAA8B;YACpC,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,YAAY,EAAE,YAAY;YAC1B,QAAQ,EAAE,QAAQ;YAClB,KAAK,EAAE,KAAK;YACZ,mBAAmB,EAAE,mBAAmB;SAC3C,CAAC;QACF,8BAAsB,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvD,CAAC,CAAC;AACN,CAAC;AAXD,sCAWC","file":"RelationCount.js","sourcesContent":["import {getMetadataArgsStorage} from \"../../index\";\r\nimport {RelationCountMetadataArgs} from \"../../metadata-args/RelationCountMetadataArgs\";\r\nimport {QueryBuilder} from \"../../query-builder/QueryBuilder\";\r\n\r\n/**\r\n * Holds a number of children in the closure table of the column.\r\n */\r\nexport function RelationCount<T>(relation: string|((object: T) => any), alias?: string, queryBuilderFactory?: (qb: QueryBuilder<any>) => QueryBuilder<any>): Function {\r\n    return function (object: Object, propertyName: string) {\r\n        const args: RelationCountMetadataArgs = {\r\n            target: object.constructor,\r\n            propertyName: propertyName,\r\n            relation: relation,\r\n            alias: alias,\r\n            queryBuilderFactory: queryBuilderFactory\r\n        };\r\n        getMetadataArgsStorage().relationCounts.push(args);\r\n    };\r\n}\r\n\r\n"],"sourceRoot":"../.."}