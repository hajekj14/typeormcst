{"version":3,"sources":["../../src/decorator/columns/ObjectIdColumn.ts"],"names":[],"mappings":";;AACA,qCAAmD;AAGnD;;;GAGG;AACH,wBAAkC,OAAuB;IACrD,MAAM,CAAC,UAAU,MAAc,EAAE,YAAoB;QAEjD,kEAAkE;QAClE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC;YAAC,OAAO,GAAG,EAAmB,CAAC;QAC5C,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE;YAC7B,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,GAAG,KAAK;SAC5C,CAAC,CAAC;QAEH,4CAA4C;QAC5C,IAAM,IAAI,GAAuB;YAC7B,MAAM,EAAE,MAAM,CAAC,WAAW;YAC1B,YAAY,EAAE,YAAY;YAC1B,IAAI,EAAE,UAAU;YAChB,OAAO,EAAE,OAAO;SACnB,CAAC;QACF,8BAAsB,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC,CAAC;AACN,CAAC;AAnBD,wCAmBC","file":"ObjectIdColumn.js","sourcesContent":["import {ColumnOptions} from \"../options/ColumnOptions\";\r\nimport {getMetadataArgsStorage} from \"../../index\";\r\nimport {ColumnMetadataArgs} from \"../../metadata-args/ColumnMetadataArgs\";\r\n\r\n/**\r\n * Special type of column that is available only for MongoDB database.\r\n * Marks your entity's column to be an object id.\r\n */\r\nexport function ObjectIdColumn<T>(options?: ColumnOptions): Function {\r\n    return function (object: Object, propertyName: string) {\r\n\r\n        // if column options are not given then create a new empty options\r\n        if (!options) options = {} as ColumnOptions;\r\n        options = Object.assign(options, {\r\n            primary: true,\r\n            name: options.name ? options.name : \"_id\"\r\n        });\r\n\r\n        // create and register a new column metadata\r\n        const args: ColumnMetadataArgs = {\r\n            target: object.constructor,\r\n            propertyName: propertyName,\r\n            mode: \"objectId\",\r\n            options: options\r\n        };\r\n        getMetadataArgsStorage().columns.add(args);\r\n    };\r\n}\r\n"],"sourceRoot":"../.."}