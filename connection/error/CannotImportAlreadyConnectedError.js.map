{"version":3,"sources":["../../src/connection/error/CannotImportAlreadyConnectedError.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;;GAGG;AACH;IAAuD,qDAAK;IAGxD,2CAAY,WAAmB,EAAE,cAAsB;QAAvD,YACI,iBAAO,SAGV;QAND,UAAI,GAAG,8BAA8B,CAAC;QAIlC,KAAI,CAAC,OAAO,GAAG,mBAAiB,WAAW,eAAS,cAAc,0EAAsE,CAAC;QACzI,KAAI,CAAC,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC,KAAK,CAAC;;IACnC,CAAC;IAEL,wCAAC;AAAD,CATA,AASC,CATsD,KAAK,GAS3D;AATY,8EAAiC","file":"CannotImportAlreadyConnectedError.js","sourcesContent":["/**\r\n * Thrown when consumer tries to import entities / entity schemas / subscribers / naming strategies after connection\r\n * is established.\r\n */\r\nexport class CannotImportAlreadyConnectedError extends Error {\r\n    name = \"CannotImportAlreadyConnected\";\r\n\r\n    constructor(importStuff: string, connectionName: string) {\r\n        super();\r\n        this.message = `Cannot import ${importStuff} for \"${connectionName}\" connection because connection to the database already established.`;\r\n        this.stack = new Error().stack;\r\n    }\r\n\r\n}"],"sourceRoot":"../.."}