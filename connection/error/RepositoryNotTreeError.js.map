{"version":3,"sources":["../../src/connection/error/RepositoryNotTreeError.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;GAEG;AACH;IAA4C,0CAAK;IAG7C,gCAAY,WAA4B;QAAxC,YACI,iBAAO,SAIV;QAPD,UAAI,GAAG,wBAAwB,CAAC;QAI5B,IAAM,UAAU,GAAG,OAAO,WAAW,KAAK,UAAU,IAAW,WAAY,CAAC,IAAI,GAAU,WAAY,CAAC,IAAI,GAAG,WAAW,CAAC;QAC1H,KAAI,CAAC,OAAO,GAAG,yBAAsB,UAAU,4FAAwF,CAAC;QACxI,KAAI,CAAC,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC,KAAK,CAAC;;IACnC,CAAC;IAEL,6BAAC;AAAD,CAVA,AAUC,CAV2C,KAAK,GAUhD;AAVY,wDAAsB","file":"RepositoryNotTreeError.js","sourcesContent":["/**\r\n * Thrown when repository for the given class is not found.\r\n */\r\nexport class RepositoryNotTreeError extends Error {\r\n    name = \"RepositoryNotTreeError\";\r\n\r\n    constructor(entityClass: Function|string) {\r\n        super();\r\n        const targetName = typeof entityClass === \"function\" && (<any> entityClass).name ? (<any> entityClass).name : entityClass;\r\n        this.message = `Repository of the \"${targetName}\" class is not a TreeRepository. Try to use @ClosureTable decorator instead of @Table.`;\r\n        this.stack = new Error().stack;\r\n    }\r\n\r\n}"],"sourceRoot":"../.."}