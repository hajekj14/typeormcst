{"version":3,"sources":["../../src/connection/error/RepositoryNotFoundError.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;GAEG;AACH;IAA6C,2CAAK;IAG9C,iCAAY,cAAsB,EAAE,WAA4B;QAAhE,YACI,iBAAO,SAKV;QARD,UAAI,GAAG,yBAAyB,CAAC;QAI7B,IAAM,UAAU,GAAG,OAAO,WAAW,KAAK,UAAU,IAAW,WAAY,CAAC,IAAI,GAAU,WAAY,CAAC,IAAI,GAAG,WAAW,CAAC;QAC1H,KAAI,CAAC,OAAO,GAAG,yBAAsB,UAAU,+DAA2D;aACtG,eAAY,cAAc,mBAAe,CAAA,CAAC;QAC9C,KAAI,CAAC,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC,KAAK,CAAC;;IACnC,CAAC;IAEL,8BAAC;AAAD,CAXA,AAWC,CAX4C,KAAK,GAWjD;AAXY,0DAAuB","file":"RepositoryNotFoundError.js","sourcesContent":["/**\r\n * Thrown when repository for the given class is not found.\r\n */\r\nexport class RepositoryNotFoundError extends Error {\r\n    name = \"RepositoryNotFoundError\";\r\n\r\n    constructor(connectionName: string, entityClass: Function|string) {\r\n        super();\r\n        const targetName = typeof entityClass === \"function\" && (<any> entityClass).name ? (<any> entityClass).name : entityClass;\r\n        this.message = `No repository for \"${targetName}\" was found. Looks like this entity is not registered in ` +\r\n            `current \"${connectionName}\" connection?`;\r\n        this.stack = new Error().stack;\r\n    }\r\n\r\n}"],"sourceRoot":"../.."}