{"version":3,"sources":["../../src/cli.ts"],"names":[],"mappings":";;;AACA,4BAA0B;AAC1B,kEAA+D;AAC/D,kEAA+D;AAC/D,wDAAqD;AACrD,sEAAmE;AACnE,4EAAyE;AACzE,sEAAmE;AACnE,4EAAyE;AACzE,8EAA2E;AAE3E,OAAO,CAAC,WAAW,CAAC;KACf,KAAK,CAAC,MAAM,CAAC;KACb,KAAK,CAAC,QAAQ,EAAE,UAAU,CAAC;KAC3B,SAAS,CAAC,OAAO,CAAC;KAClB,WAAW,CAAC,KAAK,CAAC,CAAC;AAExB,OAAO,CAAC,OAAO,CAAC;KACX,KAAK,CAAC,+BAA+B,CAAC;KACtC,OAAO,CAAC,IAAI,qCAAiB,EAAE,CAAC;KAChC,OAAO,CAAC,IAAI,qCAAiB,EAAE,CAAC;KAChC,OAAO,CAAC,IAAI,2BAAY,EAAE,CAAC;KAC3B,OAAO,CAAC,IAAI,yCAAmB,EAAE,CAAC;KAClC,OAAO,CAAC,IAAI,iDAAuB,EAAE,CAAC;KACtC,OAAO,CAAC,IAAI,+CAAsB,EAAE,CAAC;KACrC,OAAO,CAAC,IAAI,yCAAmB,EAAE,CAAC;KAClC,OAAO,CAAC,IAAI,+CAAsB,EAAE,CAAC;KACrC,MAAM,CAAC,CAAC,CAAC;KACT,OAAO,CAAC,cAAM,OAAA,OAAO,CAAC,gBAAgB,CAAC,CAAC,OAAO,EAAjC,CAAiC,CAAC;KAChD,KAAK,CAAC,GAAG,EAAE,SAAS,CAAC;KACrB,IAAI,CAAC,GAAG,CAAC;KACT,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC;KAClB,IAAI,CAAC","file":"cli.js","sourcesContent":["#!/usr/bin/env node\r\nimport \"reflect-metadata\";\r\nimport {SchemaSyncCommand} from \"./commands/SchemaSyncCommand\";\r\nimport {SchemaDropCommand} from \"./commands/SchemaDropCommand\";\r\nimport {QueryCommand} from \"./commands/QueryCommand\";\r\nimport {EntityCreateCommand} from \"./commands/EntityCreateCommand\";\r\nimport {MigrationCreateCommand} from \"./commands/MigrationCreateCommand\";\r\nimport {MigrationRunCommand} from \"./commands/MigrationRunCommand\";\r\nimport {MigrationRevertCommand} from \"./commands/MigrationRevertCommand\";\r\nimport {SubscriberCreateCommand} from \"./commands/SubscriberCreateCommand\";\r\n\r\nrequire(\"yargonaut\")\r\n    .style(\"blue\")\r\n    .style(\"yellow\", \"required\")\r\n    .helpStyle(\"green\")\r\n    .errorsStyle(\"red\");\r\n\r\nrequire(\"yargs\")\r\n    .usage(\"Usage: $0 <command> [options]\")\r\n    .command(new SchemaSyncCommand())\r\n    .command(new SchemaDropCommand())\r\n    .command(new QueryCommand())\r\n    .command(new EntityCreateCommand())\r\n    .command(new SubscriberCreateCommand())\r\n    .command(new MigrationCreateCommand())\r\n    .command(new MigrationRunCommand())\r\n    .command(new MigrationRevertCommand())\r\n    .demand(1)\r\n    .version(() => require(\"./package.json\").version)\r\n    .alias(\"v\", \"version\")\r\n    .help(\"h\")\r\n    .alias(\"h\", \"help\")\r\n    .argv;\r\n"],"sourceRoot":"."}